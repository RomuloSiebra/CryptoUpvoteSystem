// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: proto/UpvoteSystem.proto

package UpvoteSystem

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cryptocurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Upvote      int32  `protobuf:"varint,3,opt,name=upvote,proto3" json:"upvote,omitempty"`
	Downvote    int32  `protobuf:"varint,4,opt,name=downvote,proto3" json:"downvote,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Cryptocurrency) Reset() {
	*x = Cryptocurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cryptocurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cryptocurrency) ProtoMessage() {}

func (x *Cryptocurrency) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cryptocurrency.ProtoReflect.Descriptor instead.
func (*Cryptocurrency) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{0}
}

func (x *Cryptocurrency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cryptocurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cryptocurrency) GetUpvote() int32 {
	if x != nil {
		return x.Upvote
	}
	return 0
}

func (x *Cryptocurrency) GetDownvote() int32 {
	if x != nil {
		return x.Downvote
	}
	return 0
}

func (x *Cryptocurrency) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *CreateCryptoRequest) Reset() {
	*x = CreateCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCryptoRequest) ProtoMessage() {}

func (x *CreateCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCryptoRequest.ProtoReflect.Descriptor instead.
func (*CreateCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCryptoRequest) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type CreateCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *CreateCryptoResponse) Reset() {
	*x = CreateCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCryptoResponse) ProtoMessage() {}

func (x *CreateCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCryptoResponse.ProtoReflect.Descriptor instead.
func (*CreateCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCryptoResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type DeleteCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCryptoRequest) Reset() {
	*x = DeleteCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCryptoRequest) ProtoMessage() {}

func (x *DeleteCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCryptoRequest.ProtoReflect.Descriptor instead.
func (*DeleteCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCryptoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteCryptoResponse) Reset() {
	*x = DeleteCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCryptoResponse) ProtoMessage() {}

func (x *DeleteCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCryptoResponse.ProtoReflect.Descriptor instead.
func (*DeleteCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCryptoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReadCryptoByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadCryptoByIDRequest) Reset() {
	*x = ReadCryptoByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCryptoByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCryptoByIDRequest) ProtoMessage() {}

func (x *ReadCryptoByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCryptoByIDRequest.ProtoReflect.Descriptor instead.
func (*ReadCryptoByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{5}
}

func (x *ReadCryptoByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadCryptoByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *ReadCryptoByIDResponse) Reset() {
	*x = ReadCryptoByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCryptoByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCryptoByIDResponse) ProtoMessage() {}

func (x *ReadCryptoByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCryptoByIDResponse.ProtoReflect.Descriptor instead.
func (*ReadCryptoByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{6}
}

func (x *ReadCryptoByIDResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type ReadAllCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllCryptoRequest) Reset() {
	*x = ReadAllCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllCryptoRequest) ProtoMessage() {}

func (x *ReadAllCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllCryptoRequest.ProtoReflect.Descriptor instead.
func (*ReadAllCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{7}
}

type ReadAllCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *ReadAllCryptoResponse) Reset() {
	*x = ReadAllCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllCryptoResponse) ProtoMessage() {}

func (x *ReadAllCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllCryptoResponse.ProtoReflect.Descriptor instead.
func (*ReadAllCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{8}
}

func (x *ReadAllCryptoResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type UpdateCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *UpdateCryptoRequest) Reset() {
	*x = UpdateCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCryptoRequest) ProtoMessage() {}

func (x *UpdateCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCryptoRequest.ProtoReflect.Descriptor instead.
func (*UpdateCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCryptoRequest) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type UpdateCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *UpdateCryptoResponse) Reset() {
	*x = UpdateCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCryptoResponse) ProtoMessage() {}

func (x *UpdateCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCryptoResponse.ProtoReflect.Descriptor instead.
func (*UpdateCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCryptoResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type UpvoteCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpvoteCryptoRequest) Reset() {
	*x = UpvoteCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpvoteCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpvoteCryptoRequest) ProtoMessage() {}

func (x *UpvoteCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpvoteCryptoRequest.ProtoReflect.Descriptor instead.
func (*UpvoteCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{11}
}

func (x *UpvoteCryptoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpvoteCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *UpvoteCryptoResponse) Reset() {
	*x = UpvoteCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpvoteCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpvoteCryptoResponse) ProtoMessage() {}

func (x *UpvoteCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpvoteCryptoResponse.ProtoReflect.Descriptor instead.
func (*UpvoteCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{12}
}

func (x *UpvoteCryptoResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type DownvoteCryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownvoteCryptoRequest) Reset() {
	*x = DownvoteCryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownvoteCryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownvoteCryptoRequest) ProtoMessage() {}

func (x *DownvoteCryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownvoteCryptoRequest.ProtoReflect.Descriptor instead.
func (*DownvoteCryptoRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{13}
}

func (x *DownvoteCryptoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownvoteCryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *Cryptocurrency `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *DownvoteCryptoResponse) Reset() {
	*x = DownvoteCryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownvoteCryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownvoteCryptoResponse) ProtoMessage() {}

func (x *DownvoteCryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownvoteCryptoResponse.ProtoReflect.Descriptor instead.
func (*DownvoteCryptoResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{14}
}

func (x *DownvoteCryptoResponse) GetCrypto() *Cryptocurrency {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type GetVoteSumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVoteSumRequest) Reset() {
	*x = GetVoteSumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoteSumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoteSumRequest) ProtoMessage() {}

func (x *GetVoteSumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoteSumRequest.ProtoReflect.Descriptor instead.
func (*GetVoteSumRequest) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{15}
}

func (x *GetVoteSumRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVoteSumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votes int32 `protobuf:"varint,1,opt,name=votes,proto3" json:"votes,omitempty"`
}

func (x *GetVoteSumResponse) Reset() {
	*x = GetVoteSumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_UpvoteSystem_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoteSumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoteSumResponse) ProtoMessage() {}

func (x *GetVoteSumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_UpvoteSystem_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoteSumResponse.ProtoReflect.Descriptor instead.
func (*GetVoteSumResponse) Descriptor() ([]byte, []int) {
	return file_proto_UpvoteSystem_proto_rawDescGZIP(), []int{16}
}

func (x *GetVoteSumResponse) GetVotes() int32 {
	if x != nil {
		return x.Votes
	}
	return 0
}

var File_proto_UpvoteSystem_proto protoreflect.FileDescriptor

var file_proto_UpvoteSystem_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x55, 0x70, 0x76, 0x6f,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x76,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x76,
	0x6f, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55,
	0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55, 0x70, 0x76,
	0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x52, 0x65, 0x61,
	0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55,
	0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x55,
	0x70, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x6f, 0x77,
	0x6e, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55,
	0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x6f,
	0x74, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x6f,
	0x74, 0x65, 0x73, 0x32, 0xd3, 0x05, 0x0a, 0x0c, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x55, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x55, 0x70,
	0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x55, 0x70, 0x76, 0x6f,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x12, 0x22, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x55, 0x70,
	0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x12, 0x21, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x44, 0x6f, 0x77,
	0x6e, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x23, 0x2e, 0x55, 0x70,
	0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x76,
	0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x53, 0x75, 0x6d, 0x12, 0x1f, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_UpvoteSystem_proto_rawDescOnce sync.Once
	file_proto_UpvoteSystem_proto_rawDescData = file_proto_UpvoteSystem_proto_rawDesc
)

func file_proto_UpvoteSystem_proto_rawDescGZIP() []byte {
	file_proto_UpvoteSystem_proto_rawDescOnce.Do(func() {
		file_proto_UpvoteSystem_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_UpvoteSystem_proto_rawDescData)
	})
	return file_proto_UpvoteSystem_proto_rawDescData
}

var file_proto_UpvoteSystem_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_UpvoteSystem_proto_goTypes = []interface{}{
	(*Cryptocurrency)(nil),         // 0: UpvoteSystem.Cryptocurrency
	(*CreateCryptoRequest)(nil),    // 1: UpvoteSystem.CreateCryptoRequest
	(*CreateCryptoResponse)(nil),   // 2: UpvoteSystem.CreateCryptoResponse
	(*DeleteCryptoRequest)(nil),    // 3: UpvoteSystem.DeleteCryptoRequest
	(*DeleteCryptoResponse)(nil),   // 4: UpvoteSystem.DeleteCryptoResponse
	(*ReadCryptoByIDRequest)(nil),  // 5: UpvoteSystem.ReadCryptoByIDRequest
	(*ReadCryptoByIDResponse)(nil), // 6: UpvoteSystem.ReadCryptoByIDResponse
	(*ReadAllCryptoRequest)(nil),   // 7: UpvoteSystem.ReadAllCryptoRequest
	(*ReadAllCryptoResponse)(nil),  // 8: UpvoteSystem.ReadAllCryptoResponse
	(*UpdateCryptoRequest)(nil),    // 9: UpvoteSystem.UpdateCryptoRequest
	(*UpdateCryptoResponse)(nil),   // 10: UpvoteSystem.UpdateCryptoResponse
	(*UpvoteCryptoRequest)(nil),    // 11: UpvoteSystem.UpvoteCryptoRequest
	(*UpvoteCryptoResponse)(nil),   // 12: UpvoteSystem.UpvoteCryptoResponse
	(*DownvoteCryptoRequest)(nil),  // 13: UpvoteSystem.DownvoteCryptoRequest
	(*DownvoteCryptoResponse)(nil), // 14: UpvoteSystem.DownvoteCryptoResponse
	(*GetVoteSumRequest)(nil),      // 15: UpvoteSystem.GetVoteSumRequest
	(*GetVoteSumResponse)(nil),     // 16: UpvoteSystem.GetVoteSumResponse
}
var file_proto_UpvoteSystem_proto_depIdxs = []int32{
	0,  // 0: UpvoteSystem.CreateCryptoRequest.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 1: UpvoteSystem.CreateCryptoResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 2: UpvoteSystem.ReadCryptoByIDResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 3: UpvoteSystem.ReadAllCryptoResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 4: UpvoteSystem.UpdateCryptoRequest.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 5: UpvoteSystem.UpdateCryptoResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 6: UpvoteSystem.UpvoteCryptoResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	0,  // 7: UpvoteSystem.DownvoteCryptoResponse.crypto:type_name -> UpvoteSystem.Cryptocurrency
	1,  // 8: UpvoteSystem.UpvoteSystem.CreateCrypto:input_type -> UpvoteSystem.CreateCryptoRequest
	3,  // 9: UpvoteSystem.UpvoteSystem.DeleteCrypto:input_type -> UpvoteSystem.DeleteCryptoRequest
	5,  // 10: UpvoteSystem.UpvoteSystem.ReadCryptoByID:input_type -> UpvoteSystem.ReadCryptoByIDRequest
	7,  // 11: UpvoteSystem.UpvoteSystem.ReadAllCrypto:input_type -> UpvoteSystem.ReadAllCryptoRequest
	9,  // 12: UpvoteSystem.UpvoteSystem.UpdateCrypto:input_type -> UpvoteSystem.UpdateCryptoRequest
	11, // 13: UpvoteSystem.UpvoteSystem.UpvoteCrypto:input_type -> UpvoteSystem.UpvoteCryptoRequest
	13, // 14: UpvoteSystem.UpvoteSystem.DownvoteCrypto:input_type -> UpvoteSystem.DownvoteCryptoRequest
	15, // 15: UpvoteSystem.UpvoteSystem.GetVoteSum:input_type -> UpvoteSystem.GetVoteSumRequest
	2,  // 16: UpvoteSystem.UpvoteSystem.CreateCrypto:output_type -> UpvoteSystem.CreateCryptoResponse
	4,  // 17: UpvoteSystem.UpvoteSystem.DeleteCrypto:output_type -> UpvoteSystem.DeleteCryptoResponse
	6,  // 18: UpvoteSystem.UpvoteSystem.ReadCryptoByID:output_type -> UpvoteSystem.ReadCryptoByIDResponse
	8,  // 19: UpvoteSystem.UpvoteSystem.ReadAllCrypto:output_type -> UpvoteSystem.ReadAllCryptoResponse
	10, // 20: UpvoteSystem.UpvoteSystem.UpdateCrypto:output_type -> UpvoteSystem.UpdateCryptoResponse
	12, // 21: UpvoteSystem.UpvoteSystem.UpvoteCrypto:output_type -> UpvoteSystem.UpvoteCryptoResponse
	14, // 22: UpvoteSystem.UpvoteSystem.DownvoteCrypto:output_type -> UpvoteSystem.DownvoteCryptoResponse
	16, // 23: UpvoteSystem.UpvoteSystem.GetVoteSum:output_type -> UpvoteSystem.GetVoteSumResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_UpvoteSystem_proto_init() }
func file_proto_UpvoteSystem_proto_init() {
	if File_proto_UpvoteSystem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_UpvoteSystem_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cryptocurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCryptoByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCryptoByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpvoteCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpvoteCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownvoteCryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownvoteCryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoteSumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_UpvoteSystem_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoteSumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_UpvoteSystem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_UpvoteSystem_proto_goTypes,
		DependencyIndexes: file_proto_UpvoteSystem_proto_depIdxs,
		MessageInfos:      file_proto_UpvoteSystem_proto_msgTypes,
	}.Build()
	File_proto_UpvoteSystem_proto = out.File
	file_proto_UpvoteSystem_proto_rawDesc = nil
	file_proto_UpvoteSystem_proto_goTypes = nil
	file_proto_UpvoteSystem_proto_depIdxs = nil
}
